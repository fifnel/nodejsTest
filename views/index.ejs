<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src='/socket.io/socket.io.js'></script>

<script type='text/javascript'>
var socket = io.connect('http://127.0.0.1:3000');

// 接続時
socket.on('connect', function(msg) {
		console.log('connet');
		document.getElementById('connectId').innerHTML = 
		'あなたの接続ID::' + socket.socket.transport.sessid;
		document.getElementById('type').innerHTML = 
		'接続方式::' + socket.socket.transport.name;
		});

// メッセージを受けたとき
socket.on('clmsg', function(msg) {
		// メッセージを画面に表示する
		var dd = new Date();
		var foo = document.getElementById('receiveMsg').innerHTML;
		var bar = '<p>'+dd.toLocaleString()+':'+msg.value+'<p>'+foo;
		document.getElementById('receiveMsg').innerHTML = bar;
		});

// リセットメッセージを受けたとき
socket.on('clreset', function() {
		document.getElementById('receiveMsg').innerHTML = '';
		$(function () {
			$("#operation").prepend('<span id="resetnotify">リセットされました</span>');
			$("#resetnotify").show().animate({ opacity: "hide" }, "slow");
			});
		});


// メッセージを送る
function SendMsg() {
	var msg = document.getElementById('message').value;
	// メッセージを発射する
	socket.emit('svmsg', { value: msg });
}

// リセットする
function Reset() {
	socket.emit('svreset');
}

// 切断する
function DisConnect() {
	var msg = socket.socket.transport.sessid + 'は切断しました。';
	// メッセージを発射する
	socket.emit('message', { value: msg });
	// socketを切断する
	socket.disconnect();
}

</script>


<h1>socket.ioのサンプルプログラム</h1>
<div id="connectId"></div>
<div id="type"></div>
<br />
<input type="text" id="message" value="" />
<input type="button" value="メッセージを送る" onclick="SendMsg()" />
<input type="button" value="リセットする" onclick="Reset()" />
<input type="button" value="切断する" onclick="DisConnect()" />
<div id="operation">&nbsp;</div>
<div id="receiveMsg"></div>

